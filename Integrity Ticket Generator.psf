<File version="2.1">
  <FileID>df658de9-70a9-4943-895b-9557e1022d46</FileID>
  <Preview>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
VjxWh53hY6a2sxWjJs1rA8WaXVd+LpKk31o+uh0/a01bWJduyUe6l1ux7Xhdi3aXwSPHt9P1Q+qf
6ekR48qTQ8eUSfPW1jXwxNXbp6wFU/s2lulLtpbJ89bX9ebEx7a5ds+ZMmz09LJt6/Yye/aC+t4/
ovz4niFl5cr6+KvWlqEvTi9rdp++evulm4+09XVS3da0xVvL9IWb2j63z/rr+3/KgfHG/a+Vx0e8
Wl4ZN7mdbX/93Lly6+331vVpZd3eqXb7Xjlzn2Enzzn723sdthw+X+YuXPHpBoBDZ9+uT+ZkPWo+
WRe/U22KeuLVhWXx5j21vQO2aNOesnz7/nqfE2XnsUvl4SEv1CP3vnr0O64ulJPbqfbv3/VgPRLe
Uf98qE5Yh8rNP7qzHXWPqIt1Fr4f1qPgxRv3lp3HL9UF9Knyi6EvlnufGF52nXiz/KguwDOXbSqT
5q9qi+qmA2fL8xNn16Pq+XUh3dy+z/5uP3axLbRZVPeffa88+PRzbRC5vB9T2mUrtx8uN932k3J7
HSS2H73YhoWbb7+znS3INlftOFK+d+eDZcHanWXzoXNl88HX6vAwtE5VS8q+s+/W7c0pP33gl22R
H/TYM3VomVGnwrVtcc9p/EUb9pSfPfxU3Y9h5Sd1v3PmIfudgSavxY66j1nwx85a0vYhl40YO60N
Dy9N6ysPDH6uHH+ztPvd/egz5Y76OLNXbKnP8bX2HCVJn9ya3SfKhNm/PgCsrkfro+qaNmt2X/ng
g/fL22+92Xr/vXfL7l27y1MjJ9T7nrl6+9QGgHqUPnPZ9jJ5/oaytg4AuXz5ldbVAWDoi9PKihWr
yt59+8qEidPLxEkzyuEjh8v8+YvadWvrANC7/bI6AKypA0CGiWxz+qLN9fr8flvOQlxuVX2MiXNX
l1Evv1pOnjxRpkydVbZs2VrWr9/Qfq8gv/SXswgrttZt5pR/+/pwe87r69rdex2yLs5b9CkHgMOv
vVvW7ztdj6pPl3V1I3uOnS8v960rl95+p00gv83mg2fL1iPn2yKfU9e/GDa6HdlnJ75bj+pzdJ9F
beLc5e10eBa5/IZmFtos0vkIYO6qbW0BfviZUfVoeHDZc+rtdsp+2uL1ZcG6XXXxfbwsWr+nnS14
dPhLbV837j/T9nfXyTfafYbVI+dDr3/YFuFhY6a0MwX52CHDwtLN+9sR/ohx09rj99WF/p56u3mr
t9f/UI6ULYdeb2cLcl0GmjyfWcs3tfvPqkNITtvf/9TIMmb6wnp0/3J7Ttvqbe548PG6gC8oC+s+
Zv8nzFneBqEMNbn+gcHPlqdeGF+2Hj5Xbr/n0TY0PFgX+wxBk/pWtWFn6sK17bGnLV5XHq2v3fg5
y9prOXPpxrZfeY6SpE8ui2B+ya4NAHWRzOnytLoeOY+ZvqyMenFc2bN7T11Ut7V27txV5s7pK48P
G9uO6Hu3TxkmptUBYPaKnWVKBoBdJ+vlv1qs1+89W0a8NKOMHj22rFu7rmyoi3QW6nVr15dnnx1d
htfrss3e7fNxQ84iZFuzlu8oM+oAkHUyH0v0Wle3+cTQMWX2zDll7LhJ5ceDHi8PPz6irFm1ujz+
xLDy4qSFZV1+rywLf32OK7Yfq18fqQPA2rLxwOU1Me088UYdAFZ+8gBwdx0Ajrz+Xr3z2XZUvaEu
rAdPXyob9h4tw2csK8fOnL+y1P+69z74sC1uOXuQI9xXZi4u05esr4vvtrZAj6tHvPlz4frdlxf+
rYfaWYIJdZHL5Rv3n25HxRPnrahH/I+WyXVRzJmBbUcvtIEhn21sr19P7lvdTumPn720HY3vPP5G
29eUhXbKwjVlfl3McyYh98/iv6Me6U9esLqMnppfIDzRTtPnP47pdajIY+c2OZJfVPct28hjjRw7
vQ0nW+pwksuWbNpXhr8ytbzw6uy277k828lZiGxryoI17eh/zc5jbd9yfS7L7XPqPov4nHoknzMA
fWt2tvtl4Z9Vh5JsPwNFBoBldUDJ65chYNuRC21b+Y3TzQfPXX2ekqTfXtavV+esa0fry+vimAUy
XT69f7h9Ln/3Q0Nrz5S7H86fQ8udDw4p42fl499TV2+f1u85XWYs3FzmrNzVBoF8v3z78Xrd5do/
t7t2T3lyxPhy/2PPlgd++VwrXz/4xAv1/X9LO/PQu33um8U7HytkqJi1ZGtdrM/U7Vz+ZfS0tj7G
/FU7yyNPjSqPPTOm/W7A3Pr9Q0++UJ4YMbYebO6t69nlXxzvlbMKk+aurwfVr119HXafeqvMX/wp
B4Bj5z9oR+RZwDYefK3sOX6hLfCHT50r94yeVWas2loOnDzbLuvvg48+KtvqAJCFat+Zd+rR+Jtt
Ec6Cl23trt/nz5yO2FN3KIteLst0kq+zSObU/dAxk+sgsLjdN6f/cwo+28pt8vW+M++2xXzYK1Pa
wpvLs92U67O9PEaeeO/xe5dnO1sOv94ed2v9c0e9PvfLbXr7lNtm0MiZh61HXm/ft/2+clnvdrls
V91m73nl69wm2+1dluFk98m3rnz9q33Jn7lN7rPj2OV9yO1ymww8e0+/3b6+fHnd1yv7le8lSZ/c
pvqeObEeDW+ta1LOoG452Kse1B0+396fNx+oC+X+ulD2qt/n+stduX29767jF8vMepQ+Z9XuNgDs
rO/h125zez1gy/t53qv792vbq22u991Rb58BYM6KXWX20m2X3/P73aa3zVyetSX7nI+ts27l8m11
rclzu1rd5qa9p8vEOfU517Wr9zrsrWvm/MWrPt0AcPxCjuTPtwfLYrazPvCJc2+XMxfeLYdPXypz
6tQxpU4sR8++WU6+/nY5fu6tev1b5ehrb9adyn0u3/czlQW1vlA58s4RdBbGXDbQbfPEc5vNdYHP
Qpp9HOh2kqTulkVzzvKdZcq8DXXx3lKP4K+pXjZz8dYy65pmLtr6a7ebnn9md8HmsrEOCTPq9dP6
Ng24zVyWbV5btvGx29bv29H/0u3tyH/K/I1l+sLNH79Nv9t+bJ/a9/2u73d5fqdgfh1Ssjb2Xof9
Z98vfZ9qALj73r4TF+uRfJ0y8uJlsd1y+EKdpM638nWmpl3H3yybDl2+7Gr1+/wVua31Pp+5dr86
2RzL0ful9vVv3Fa9PH8db9uVv5I34G0kSZ1uW9aRWk7n5/T752rnqXo0X4/a2xnb8+37AW/3Gcua
mm1uOvB63ebJAW/zWcrfNMjzzsfHbQ2vHTj3Qelb8qkGgEF9Jy+WsqMurjnVkP8x0LEzF8pRSZK+
Tp2+0Nav42cvfiEdO3PxyjYHvv53qa2v2eYA1/3O1W0ePJnFvx5U1w6e+/B3GADqFLH3+MVy6cL5
clGSJH3le+Pi+XLqtctnQK4OAJ/uI4BfHwAunD9fzkuSpK98GQJOnjUASJLUqQwAkiR1MAOAJEkd
7IYNAG+++WZ55513Ot0bb7wx4GsjSfriu3DhQnn77bcHfD/uUhcvXhzw9bkhA0AWvs2bN5dZs2aV
efPmda65c+eW2fW579mzxxAgSTegLP6vv/56WbJkSZkzZ86A782/7+V59/X1ldOnTw84BFz3ASAL
3oEDB8pLL71U9u7dWw4ePFj279/fqfL8t23dWl5++eVy5syZ3ziNSZK+mHLkv3Tp0jJt2rRy+PDh
9j480Pvz73OHDh0qCxYsKDNmzmyvx7Wv0XUfAHLqf2td/DKFRb5/6623OtdHH31UZs+eXY4cOWIA
kKTrXE595yg4C//7778/4Pvy73t5DV577bUyffr0tvZe+xrdkAFg27ZtZdGiReXdd99tl+XUTM4M
9Mr3vct75fsslJcuXfq16waqd/ve1/0vzzZ6j5Wvr73NQPXfXv8Fu/9j9L7vXd///teWH0Q+Ajl6
9OjHtidJ+uLLe25Of+/evbutQ9e+J+c2+fO3rUPXqzxO1oHeY/fqv770//PTrDEDlfudOHGizJw5
88sfAPIDyWcy2bEshPnB5DRFJpVc3r/seP7MKYzc/trrP23Zh7Nnz5Z9+/a1z+DzeOfOnWuXD3T7
Xrk+L1xO2Q90fcptTp061eptL9vODzLPKV/3bpvvDQCSdGPqDQC7du1qB3699+JeeR9OWRdSvv48
a821ZVvZh/7rQP/rsm5kDczHE1nnsg9ZH/J5ffb/2vsMVLadx/hN+53Ljx8//uUOANu3by8LFy5s
i2B+EBkIvvnNb5Z77723/PCHP2y/JJdFM7f94IMP2mcV+WE8/fTT7XcHcvr8vffea08mZxFym1yf
Uxu5PKd38mQffPDBdpsPP/ywvTC5Prf/2c9+Vm6//fZy1113lYceeqgNBLlfynZ69899su3cP/u6
Zs2asmrVqvLLX/6y7V9un/3Ji5l9zHPZuHFjKz+E3r7nh5rnmPtkH1KemwFAkm5MvQFg586dbV3o
vRenvNfnsmeffbatDylfZ23I+3rey/N+33vvzjqSdSLfZ9u5Pt9nO7214do1LAeQWUOyvVyXy7NP
vW2uXLmyDBo0qPzzP/9z+dd//df2dU7VZ73M/XP7yEfHL774Yvu6t3b09i/byWOcPHny6prXv1yW
NecrMQDk6zyBnA145JFH2hOKO++8s/0tgXXr1pWnnnqqLF68uN3mz/7sz8qxY8fafZ977rk2yY0b
N67dJj/UvLD5xbpclyf7gx/8oAwfPrw8//zz7Ynnh5nHzOVZpPMDyUKfaSsv9OjRo8uOHTvKyJEj
2+OkvNDZXqaz7NOKFSvKj370o/ZY+YHnsceOHdt+kHl+W7ZsafuSRb+3X3k++YHmNtmHTHT5D8AA
IEk3pv4DQL7Pe3GvLOh5r896kQPMyDqTdSJnifNenoO9DAnLli27etve+pHrs25knVm9enW7PvfP
oj5q1KiyYcOGMmPGjPKnf/qn7bF7a1suy/t/ziznvpHtjB8/vn2dA8esSfmF+SeffLJMmDChrXEZ
TrJ2ZDtZp7KtF154oS38eYxXX321HbT2f44p6+JXYgDIDyI7m53PAv83f/M37Qj/7rvvbkfnWUj/
67/+qz3h/Dl48ODyrW99q/0CYQaBMWPGlCFDhrTFeMSIEe0+GQZuvfXWtp21a9e2Serxxx9vZxZy
m7zI6aabbmrbzH3y1yLym6F//ud/XoYOHVr+8R//sTz22GPliSeeaNf99V//dfnLv/zL8sADD7TL
c5tMhzmNkhczl+WHnUU9P8D8kLJfeR7Z5+x/zkTcdttt7bF7f+shzz0/fAOAJF3/MgDkN+A3bdp0
9W8B9Mp796OPPtrey7Oo56Av798ZALJOZFHO2pKDxH/5l38pDz/8cDt7nEU3B6+57x133FGGDRvW
bpf3++XLl5dbbrmlrVvf+MY32hqU+2YN+853vtMW+axFWYyzHvT2I2tIHj/7m4U961nWsKx5GSbu
u+++8tOf/rSdic6AkAPMrFd5/KxH2eaUKVPaAW7/59grHy3k4DMDwrWv0Q0bAObPn98Wv0xPOeWf
xXrixIll8uTJ7WOAfP0Xf/EX7cX4z//8zzbR/PznP29POC9wTndkYc2CnRf/xz/+cfth5YeRU/v5
Wwbf//7324vwyiuvtBctR/H5wX/ve99rR+i9hXfq1Knt+kxTeYwc6edFzYufswfZl/xHkO+feeaZ
9ljZTn5o+Q8h288RfV7QLP4ZErK433///e0/mPxHkv+YMgDkcVN++98AIEk3pt4AkKPx3u+A9cra
kLUjC3jex3MU/x//8R/tPf+f/umf2gFg1pMcff/kJz9pB3JZq37xi1+0g8kcFGYBzpF5Dv5yAJpt
5GxzDma//e1vt0X9nnvuaWeuc5SeRTuPkQPNrCfZj6wpWcRzdiFnmbNu5HZ57Bxw5jlkH/7kT/6k
fUSQteMf/uEf2nqV/cqAkMfPR9XXPseUtSeP/6UPAPnrGFkEM5Hk72XmBczplUxAedJZ1POk8oLm
67xIeRGyOH/3u99tL1QW3izMWXSzyGbRz4Kc2+W6DBJ50rkuP8AMAznj8G//9m9toc9280JnuMiL
ljMB+SHmtE0eO4t/Ls8PJJdn6srinsfMfwDZh/xHk+1lUMmklvtl0ssPqXe/TGMZSvJc8wPIKSgD
gCTduPoPADmlnoWwVxbLHABmUc26kPfwv/3bv23v93kfzyKcNSSn9XMAmQPRrDFZbzI05GAv1+fA
NgtxPrLOEJAzAbldzgRkXcs6kPUlt8lZhZxFyKCQx89+5Mxyhoo8btaFDCBZ33pnGXL73n1z4Jyz
ALksB8N5/JxZz+3ymDm47v8ce2X9+VIHgHymkQEgi2i+zpF7PlfJzuX7vLg5fZLP2/NEs7PZ6Szw
uS5/5nZ50XJ0ntvkxc6p9XwMkNPu+TofLeR2uS4verafBTgvXKaxDBf5XCc/+DxWhos8bia2DAPZ
fq7PVJXHzA8328q+Zn+yrUxauT77kO3leeX5ZJv5PrfPwp//ILLd3vPLczcASNKNKQNAFvC8N2ct
yIFo/7Jm5Bfoeu/lWUzzXp737XyftSXv+VkLcvv169dfXVeynuRsb77O+pCPGbK9vO9nmMgaloU+
60W2mT/zOPndswwjvX3I/XNd9iMHr7lP9re3D1nbMsDkcbPA5/nksfL4Waty/9w2j5t97W23f1l/
vvQBIItwFtgsutmhLKjZ8dT7PuVFzBPJ5yZ5cr0/c7t8nRcvt8kTy2X5PuXr3u1zXf/tZ3u5T8o+
9K7vPW7vz9w31+d22Vbul33vv61839tW6v+i5/tc339fUr7PdfnhGwAk6frXGwCyuOZ9ufd+3P99
uf/7+bXv5QOtK7l91otcn7Uil/fWkN5tc10W89y2//rSe4zc7tp9SP2/7r8PvcfN9dlO77re4+f7
3hrV2+61fekfAeRoOi9KpplMRF0qk2N+kPnlDwOAJF3/+p8ByOI40HtzF8oA8qUOAJl68lfnMrX0
ppmuldcgvyeQ3yMwAEjS9S0DQA488zFt78zvQO/Nv6/l+eagOx8f5BcY828LXPsaXfcBIL/ol/IR
QH75Lp+D51R4l8pzzl8ByWdF+dsD175GkqQvtvxWfc645vfG8ovnA703/76XtSe/y5BBYKC157oP
ACkDQM4E5Ov8nctrr/99L8+5/2sgSbr+9f4Vvi6uOynPu/caDHT9DRkAJEnSV6sbNgD0PgqQJEk3
toHW5es+AOQURH75IKe/cxpCkiTduPILkfnl82s/CrnuA0D+Cd/860X594pvvvnm9s8oSpKk61/+
PwT5p/fzbwVc+1cBr/sAkP/TUnYg/2xh/scL+ed2JUnS9S9/A+3v//7v279omAPy/uvzdR8A8v/W
z7/Rn3/jOH8NMDsjSZKuf/mrgDkDn7+Gnv8Ncv/1+YYNAPmf5+TvY+bvJEqSpOtf/j2Af//3fzcA
SJLUpQwAkiR1MAOAJEkdzAAgSVIHMwBIktTBDACSJHUwA4AkSR3MACBJUgczAEiS1MEMAJIkdTAD
gCRJHcwAIElSBzMASJLUwQwAkiR1MAOAJEkdzAAgSVIHMwBIktTBDACSJHUwA4AkSR3MACBJUgcz
AEiS1MEMAJIkdTADgCRJHcwAIElSBzMASJLUwQwAkiR1MAOAJEkdzAAgSVIHMwBIktTBDACSJHUw
A4AkSR3MACBJUgczAEiS1MEMAJIkdTADgCRJHcwAIElSBzMASJLUwQwAkiR1MAOAJEkdzAAgSVIH
MwBIktTBDACSJHUwA4AkSR3MACBJUgczAEiS1MEMAJIkdTADgCRJHcwAIElSBzMASJLUwQwAkiR1
MAOAJEkdzAAgSVIHMwBIktTBDACSJHUwA4AkSR3MACBJUgczAEiS1MEMAJIkdTADgCRJHcwAIElS
BzMASJLUwQwAkiR1MAOAJEkdzAAgSVIHMwBIktTBDACSJHUwA4AkSR3MACBJUgczAEiS1MEMAJIk
dTADgCRJHcwAIElSBzMASJLUwQwAkiR1MAOAJEkdzAAgSVIHMwBIktTBDACSJHUwA4AkSR3MACBJ
UgczAEiS1MEMAJIkdTADgCRJHcwAIElSBzMASJLUwQwAkiR1MAOAJEkdzAAgSVIHMwBIktTBDACS
JHUwA4AkSR3MACBJUgczAEiS1MEMAJIkdTADgCRJHcwAIElSBzMASJLUwQwAkiR1MAOAJEkdzAAg
SVIHMwBIktTBDACSJHUwA4AkSR3MACBJUgczAEiS1MEMAJIkdTADgCRJHcwAIElSBzMASJLUwQwA
kiR1MAOAJEkdzAAgSVIHMwBIktTBDACSJHUwA4AkSR3MACBJUgczAEiS1MEMAJIkdTADgCRJHcwA
IElSBzMASJLUwQwAkiR1MAOAJEkdzAAgSVIHMwBIktTBDACSJHUwA4AkSR3MACBJUgczAEiS1MEM
AJIkdTADgCRJHcwAIElSBzMASJLUwQwAkiR1MAOAJEkdzAAgSVIHMwBIktTBDACSJHUwA4AkSR3M
ACBJUgczAEiS1MEMAJIkdTADgCRJHcwAIElSBzMASJLUwQwAkiR1MAOAJEkdzAAgSVIH+0oMAIMH
Dy6TJk0qEyZMkCRJN6CZM2eWm2666csZAD766KNy8803l0GDBpWRI0eWYcOGSZKkG9BLL71U/u7v
/q4sWbKkvPfeex9bn6/7AJCJY8iQIW0IuPXWW8stt9wiSZJuQLfddlv59re/XXbv3l3eeuutj63P
130AeP3119sQkMkjf0qSpBvTO++8Uz744INy6dKlth73X5+/0AHgUt1YNihJkr7avXHxfDn12hcw
AOw+drGcqpNEpglJkvTV7nRd/I+cutDW8N95AMgdU6YISZL09ai3+H/uAUCSJH09+9QDwL333r/g
4oel3uGjdidJkvT17fS7pSxbvemTB4Bbbr11xap1W0vfktVtYpAkSV/fsvi/NGb8Jw8AAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAQM8f/MH/Bz5lNl1NDNsoAAAAAElFTkSuQmCC</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="formIntegrityTicketGener" children="Controls">
    <Property name="AutoScaleDimensions">8, 17</Property>
    <Property name="AutoScaleMode">Font</Property>
    <Property name="ClientSize">975, 362</Property>
    <Property name="Icon">
      <Binary>AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAACMuAAAjLgAAAAAA
AAAAAAD////c////8v///+3////t////7f///+3////t////7f///+3////t9PHs79nPvvTCsZX5
s558/KmRav6wmnf8+vn37v///+3////t////7f///+3////t////7f///+3////t////7f///+3/
///t////7f///+3////y////3P///+3/////////////////////////////////////7+rj/8Oy
l/+mjWX/oohe/6KIXv+iiF7/oohe/62Wcv/7+ff/////////////////////////////////////
///////////////////////////////////////////t////7f//////////////////////////
+vn3/8u9pf+kimH/oohe/6KIXv+znnz/zcCp/+LazP/t6eH/9PHr/////v//////////////////
/////////////////////////////////////////////////////////////+3////t////////
/////////////+/q4/+ynXr/oohe/6KIX/+/rZH/6ePY//7+/v//////////////////////////
////////////////////////////////////////////////////////////////////////////
////7f///+3////////////////p49n/qZBp/6KIXv+tlnD/5NzQ////////////////////////
////////////////////////////////////////////////////////////////////////////
///////////////////////t////7f//////////7+rj/6qTbf+iiF7/t6OD//Xy7v//////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////+3////t//////r49v+0n33/oohe/7ikg//5
+PX/////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////7f///+3/////yruj
/6KIXv+umHP/9fLu////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
///t////7ezn3v+jimH/oohe/+LazP//////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////+3////txLOY/6KIXv+/rZH/////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////7fPw6u+njmb/oohe/+ji1///////////////
////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////t2M689KKIXv+2ooH/
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/+3BsJT5oohe/8W1m//z8Or/7uri/+7q4v/u6uL/7uri/+7q4v/u6uL/7uri/+7q4v/u6uL/7uri
/+7q4v/u6uL/7uri/+7q4v/u6uL/7uri/+7q4v/u6uL/7uri/+7q4v/u6uL/7uri/+7q4v/u6uL/
7uri/+7q4v/t6eH/8u7o77Ode/yiiF7/oohf/6KIXv+iiF7/oohe/6KIXv+iiF7/oohe/6KIXv+i
iF7/oohe/6KIXv+iiF7/oohe/6KIXv+iiF7/oohe/6KIXv+iiF7/oohe/6KIXv+iiF7/oohe/6KI
Xv+iiF7/oohe/6KIXv+iiF7/oohe/6KIXv+xm3j8tJ58+6uUbv+tlnD/rJVw/6yVcP+slXD/rJVw
/6yVcP+slXD/rJVw/6yVcP+slXD/rJVw/6yVcP+slXD/rJVw/6yVcP+slXD/rJVw/6yVcP+slXD/
rJVw/6yVcP+slXD/rJVw/6yVcP+slXD/rJVw/6yVcP+slXD/qpNt/7OefPz8+/rt/Pz7//z8+//8
/Pv//Pz7//z8+//8/Pv//Pz7//z8+//8/Pv//Pz7//z8+//8/Pv//Pz7//z8+//8/Pv//Pz7//z8
+//8/Pv//Pz7//z8+//8/Pv//Pz7//z8+//8/Pv//Pz7//z8+//8/Pv//Pz7//z8+//8/Pv//Pv6
7fv59+77+vj/+/r4//v6+P/7+vj/+/r4//v6+P/7+vj/+/r4//v6+P/7+vj/+/r4//v6+P/7+vj/
+/r4//v6+P/7+vj/+/r4//v6+P/7+vj/+/r4//v6+P/7+vj/+/r4//v6+P/7+vj/+/r4//v6+P/7
+vj/+/r4//v6+P/7+ffusp16/KmRav+qkmz/qpJr/6qSa/+qkmv/qpJr/6qSa/+qkmv/qpJr/6qS
a/+qkmv/qpJr/6qSa/+qkmv/qpJr/6qSa/+qkmv/qpJr/6qSa/+qkmv/qpJr/6qSa/+qkmv/qpJr
/6qSa/+qkmv/qpJr/6qSa/+qkmz/qZFq/7Kdevyznnz8oohe/6OJYP+iiF7/oohe/6KIXv+iiF7/
oohe/6KIXv+iiF7/oohe/6KIXv+iiF7/oohe/6KIXv+iiF7/oohe/6KIXv+iiF7/oohe/6KIXv+i
iF7/oohe/6KIXv+iiF7/oohe/6KIXv+iiF7/oohe/6OJYP+iiF7/sp16/MKxlvmiiF7/xbWb//bz
7//x7eb/8e3m//Ht5v/x7eb/8e3m//Ht5v/x7eb/8e3m//Ht5v/x7eb/8e3m//Ht5v/x7eb/8e3m
//Ht5v/x7eb/8e3m//Ht5v/x7eb/8e3m//Ht5v/x7eb/8e3m//Ht5v/28+//x7ie/6KIXv/BsJT5
2c++9KKIXv+0n37//v7+////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
//+2ooH/oohe/9jNu/Tz8Ovvp49n/6KIXv/k3ND/////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////6ePY/6KIXv+mjmb/8+/q7////+3FtZv/oohe/7yqi///////////////////
////////////////////////////////////////////////////////////////////////////
///////////////////////////////////ArpH/oohe/8SzmP/////t////7e3o3/+kimH/oohe
/+DXyf//////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////4trM/6KIXv+jimH/7Ofe/////+3/
///t/////8u8pf+iiF7/rZZw//Pw6///////////////////////////////////////////////
//////////////////////////////////////////////////////////////Xy7v+umHP/oohe
/8q7o///////////7f///+3/////+/n3/7Wgf/+iiF7/taF///j28v//////////////////////
///////////////////////////////////////////////////////////////////////////5
+PX/uKSD/6KIXv+0n33/+vj2///////////t////7f//////////8Ozm/6uUbv+iiF7/taB+//Pw
6v//////////////////////////////////////////////////////////////////////////
////////////9fLt/7aigf+iiF7/q5Nt/+/r5P///////////////+3////t////////////////
6+Xc/6qSbP+iiF7/qpNt/+DXyf//////////////////////////////////////////////////
/////////////////////////+Lazf+slW//oohe/6mRav/q5Nr/////////////////////7f//
/+3/////////////////////8Ozm/7Wgf/+iiF7/oohe/7ypiv/l3tL//f38////////////////
/////////////////////////////v38/+fg1f+9q43/oohe/6KIXv+0nnz/7+vk////////////
///////////////t////7f//////////////////////////+/r5/87Aqv+ljGP/oohe/6KIXv+w
mnb/yruj/9/Vx//r5dz/8Ovk//Ds5f/r5t3/39bH/8q8pP+xm3j/oohe/6KIXv+li2L/zb+p//v6
+P///////////////////////////////+3////t////////////////////////////////////
//Ht5v/Gt53/p49n/6KIXv+iiF7/oohe/6KIXv+iiF7/oohe/6KIXv+iiF7/oohe/6KIXv+nj2f/
xrac//Ds5f//////////////////////////////////////////7f///9z////y////7f///+3/
///t////7f///+3////t////7f///+328+/v3NPD88W0mvi1oH77rJVv/aePZ/6nj2f+rJVv/bWg
fvvFtJr43NPD8/bz7+/////t////7f///+3////t////7f///+3////t////7f////L////cAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAA=</Binary>
    </Property>
    <Property name="Name">formIntegrityTicketGener</Property>
    <Property name="Text">Integrity Ticket Generator</Property>
    <Event name="Load">formIntegrityTicketGener_Load</Event>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonGenerateTicket" children="Controls">
      <Property name="Location">830, 13</Property>
      <Property name="Margin">4, 4, 4, 4</Property>
      <Property name="Name">buttonGenerateTicket</Property>
      <Property name="Size">132, 30</Property>
      <Property name="TabIndex">2</Property>
      <Property name="Text">Generate Ticket</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonGenerateTicket_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridview1" children="Controls">
      <Property name="ColumnHeadersHeightSizeMode">AutoSize</Property>
      <Property name="Location">13, 51</Property>
      <Property name="Margin">4, 4, 4, 4</Property>
      <Property name="Name">datagridview1</Property>
      <Property name="RowTemplate">
        <Property name="Height">24</Property>
      </Property>
      <Property name="Size">949, 305</Property>
      <Property name="TabIndex">1</Property>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonRefreshEmailList" children="Controls">
      <Property name="Location">13, 13</Property>
      <Property name="Margin">4, 4, 4, 4</Property>
      <Property name="Name">buttonRefreshEmailList</Property>
      <Property name="Size">132, 30</Property>
      <Property name="TabIndex">0</Property>
      <Property name="Text">Refresh Email List</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonRefreshEmailList_Click</Event>
    </Object>
  </Object>
  <Code><![CDATA[Function Get-BasicADObject
{
<# 
    .SYNOPSIS  
        Function allow to get AD object info without AD Module. 
 
    .DESCRIPTION  
        Use Get-OwnADObject to get information about Active Directory object's. 
 
    .PARAMETER Filter  
        Filter objects, default search information about users. 
 
    .PARAMETER $Ldap 
        LDAP Path to object. 
         
    .EXAMPLE  
        Get-OwnADObject -SearchRoot 'dc=domain,dc=com'| Export-Csv C:\ADObj.csv -NoTypeInformation 
 
    .NOTES  
        Author: Michal Gajda  
#>	
	[CmdletBinding(
				   SupportsShouldProcess = $True,
				   ConfirmImpact = "Low"
				   )]
	param
	(
		[String]$Ldap = "dc=" + $env:USERDNSDOMAIN.replace(".", ",dc="),
		[String]$Filter = "(&(objectCategory=person)(objectClass=user)(samaccountname=$env:USERNAME))"
	)
	
	Begin { }
	
	Process
	{
		if ($pscmdlet.ShouldProcess($Ldap, "Get information about AD Object"))
		{
			$searcher = [adsisearcher]$Filter
			
			$Ldap = $Ldap.replace("LDAP://", "")
			$searcher.SearchRoot = "LDAP://$Ldap"
			$results = $searcher.FindAll()
			
			$ADObjects = @()
			foreach ($result in $results)
			{
				[Array]$propertiesList = $result.Properties.PropertyNames
				$obj = New-Object PSObject
				foreach ($property in $propertiesList)
				{
					$obj | add-member -membertype noteproperty -name $property -value ([string]$result.Properties.Item($property))
				}
				$ADObjects += $obj
			}
			
			Return $ADObjects
		}
	}
	
	End { }
}

Add-type -assembly "Microsoft.Office.Interop.Outlook" | out-null
$olFolders = "Microsoft.Office.Interop.Outlook.olDefaultFolders" -as [type]
$outlook = new-object -comobject outlook.application
$namespace = $outlook.GetNameSpace("MAPI")
$data = Get-BasicADObject
$userName = $data.cn + " (" + $env:USERNAME + ")"

$buttonRefreshEmailList_Click={
	$folder = $namespace.getDefaultFolder($olFolders::olFolderInBox)
	$list = $folder.items | Select-Object -Property SenderName, Subject, ReceivedTime, Body | Sort-Object -Property ReceivedTime -Descending | Select-Object -First 10
	ConvertTo-DataTable -InputObject $list -RetainColumns
	Update-DataGridView -DataGridView $datagridview1 -Item $list -AutoSizeColumns 'DisplayedCells'
}

$buttonGenerateTicket_Click = {
	$rowindex = $datagridview1.CurrentCell.RowIndex
	$Subject = $datagridview1.Rows[$rowindex].Cells[1].Value.ToString()
	$Body = $datagridview1.Rows[$rowindex].Cells[3].Value.ToString()
	Write-Output $userName
	$result = im createissue --type='Help Ticket' --field="Summary=$Subject" --field="description=$Body" --field="Affected User=$userName" 2>&1
	[System.Windows.Forms.MessageBox]::Show("$result", "Ticket Generated")
}

#region Control Helper Functions
function Update-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	.PARAMETER AutoSizeColumns
	    Resizes DataGridView control's columns after loading the items.
	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember,
		[System.Windows.Forms.DataGridViewAutoSizeColumnMode]$AutoSizeColumns = 'None'
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
	{
		$DataGridView.DataSource = $Item.Tables[0]
	}
	elseif ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{
			$array.Add($Item)
		}
		$DataGridView.DataSource = $array
	}
	
	if ($AutoSizeColumns -ne 'None')
	{
		$DataGridView.AutoResizeColumns($AutoSizeColumns)
	}
	
	$DataGridView.ResumeLayout()
}

function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterWMIProperties
			This switch removes WMI properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	[ValidateNotNull()]
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterWMIProperties)
	
	if($null -eq $Table)
	{
		$Table = New-Object System.Data.DataTable
	}
	
	if ($InputObject -is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
	{
		$Table = $InputObject.Tables[0]
	}
	else
	{
		if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()
			
			if ($null -eq $InputObject) { return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach ($item in $InputObject)
			{
				if ($null -ne $item)
				{
					$object = $item
					break
				}
			}
			
			if ($null -eq $object) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if (-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__')) #filter out WMI properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if ($null -ne $prop.Value)
					{
						try { $type = $prop.Value.GetType() }
						catch { Out-Null }
					}
					
					if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
						[void]$table.Columns.Add($prop.Name, $type)
					}
					else #Type info not found
					{
						[void]$table.Columns.Add($prop.Name)
					}
				}
			}
			
			if ($object -is [System.Data.DataRow])
			{
				foreach ($item in $InputObject)
				{
					$Table.Rows.Add($item)
				}
				return @( ,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()
		}
		
		foreach ($item in $InputObject)
		{
			$row = $table.NewRow()
			
			if ($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if ($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}
	
	return @(,$Table)	
}
#endregion

$formIntegrityTicketGener_Load={
	#TODO: Place custom script here
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
  </Assemblies>
</File>